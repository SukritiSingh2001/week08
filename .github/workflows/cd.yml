name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Backend Dependencies
        run: |
          cd backend/product_service && npm install
          cd ../order_service && npm install

      - name: Lint Backend
        run: |
          cd backend/product_service && npm run lint
          cd ../order_service && npm run lint

      - name: Run Backend Tests
        run: |
          cd backend/product_service && npm test
          cd ../order_service && npm test

      - name: Install Frontend Dependencies
        run: |
          cd frontend && npm install

      - name: Lint Frontend
        run: |
          cd frontend && npm run lint

      - name: Run Frontend Tests
        run: |
          cd frontend && npm test

      - name: Debug ENV
        run: echo "ACR_NAME=$ACR_NAME | ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER"

      - name: Login to Azure Container Registry
        run: az acr login -n $ACR_NAME

      - name: Build and Push Product Service Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/product_service:${IMAGE_TAG} ./backend/product_service/
          docker push $ACR_LOGIN_SERVER/product_service:${IMAGE_TAG}

      - name: Build and Push Order Service Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/order_service:${IMAGE_TAG} ./backend/order_service/
          docker push $ACR_LOGIN_SERVER/order_service:${IMAGE_TAG}

      - name: Build and Push Frontend Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/frontend:${IMAGE_TAG} ./frontend/
          docker push $ACR_LOGIN_SERVER/frontend:${IMAGE_TAG}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update Product Service Deployment
        run: |
          kubectl set image deployment/product-deployment product=$ACR_LOGIN_SERVER/product_service:${IMAGE_TAG}
          kubectl rollout status deployment/product-deployment

      - name: Update Order Service Deployment
        run: |
          kubectl set image deployment/order-deployment order=$ACR_LOGIN_SERVER/order_service:${IMAGE_TAG}
          kubectl rollout status deployment/order-deployment

      - name: Update Frontend Deployment
        run: |
          kubectl set image deployment/frontend-deployment frontend=$ACR_LOGIN_SERVER/frontend:${IMAGE_TAG}
          kubectl rollout status deployment/frontend-deployment
