name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:

  # ---------------- BACKEND CI ----------------
  backend_ci:
    runs-on: ubuntu-latest
    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do pip install -r "$req"; done
          pip install pytest httpx

      - name: Test product_service
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Test order_service
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  # ---------------- BUILD & PUSH DOCKER IMAGES ----------------
  build_push_images:
    runs-on: ubuntu-latest
    needs: backend_ci
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build & push product_service image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product_service:${IMAGE_TAG} ./backend/product_service/
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product_service:${IMAGE_TAG}

      - name: Build & push order_service image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order_service:${IMAGE_TAG} ./backend/order_service/
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order_service:${IMAGE_TAG}

      - name: Build & push frontend image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}
